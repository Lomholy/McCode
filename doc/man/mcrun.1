.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "MCRUN" "1" "July 2024" "" ""
.hy
.SH NAME
.PP
\f[B]mcrun\f[R] - Running McStas simulations from the command-line
.SH SYNOPSIS
.PP
\f[B]mcrun\f[R] [-cpnN] \f[I]INSTR\f[R] [-sndftgahi]
params={val|min,max|min,guess,max}\&...
[-hB][-c CMD][-f FROM][-n NAME][-o DIR][-s SCRIPT]
.SH DESCRIPTION
.PP
The \f[B]mcrun\f[R] front-end provides a convenient command-line
interface for running simulations with the same automatic compilation
features.
It also provides a facility for running a series of simulations while
varying an input parameter, as well as a multiparameter non-linear
optimisation.
The command \f[V]mcrun sim args ...\f[R] will compile the instrument
definition INSTR e.g.
\f[V]sim.instr\f[R] (if necessary) into an executable simulation
\f[V]sim.out\f[R].
It will then run \f[V]sim.out\f[R], passing the argument list
\f[V]args\f[R] usually given as a series of \f[V]param=value\f[R] pairs.
The \f[V]-h\f[R] option will list valid options.
.SH OPTIONS
.TP
\f[B]\[en]version\f[R]
show program\[cq]s version number and exit
.TP
\f[B]-h, \[en]help\f[R]
show this help message and exit
.TP
\f[B]-c, \[en]force-compile\f[R]
force rebuilding of instrument.
This may be needed in case any component definitions are changed (in
which case mcrun does not automatically recompile), or if a new version
of McStas has been installed.
.TP
\f[B]-I I\f[R]
Append path \f[I]I\f[R] to McCode search path (implies -c)
.TP
\f[B]\[en]D1=D1\f[R]
Set extra -D args (implies -c)
.TP
\f[B]\[en]D2=D2\f[R]
Set extra -D args (implies -c)
.TP
\f[B]\[en]D3=D3\f[R]
Set extra -D args (implies -c)
.TP
\f[B]-p FILE, \[en]param=FILE\f[R]
Read parameters from file FILE The file should consist of specifications
of the form name =value separated by spaces or line breaks.
Multiple -p options may be given together with direct parameter
specifications on the command line.
If a parameter is assigned multiple times, later assignments override
previous ones.
.TP
\f[B]-N NP, \[en]numpoints=NP\f[R]
Set number of scan points, varying one or more parameters within
specified intervals.
Such a series of simulations is called a scan.
To specify an interval for a parameter X, it should be assigned two
values separated by a comma.
For example, the command \f[I]mcrun sim.instr -N4 X=2,8 Y=1\f[R] would
run the simulation defined in sim.instr four times, with X having the
values 2, 4, 6, and 8, respectively.
After running the simulation, the results will be written to the file
mccode.dat by default.
This file contains one line for each simulation run giving the values of
the scanned input variables along with the integrated intensity and
estimated error in all monitors
.TP
\f[B]-L, \[en]list\f[R]
Use a fixed list of points for linear scanning
.TP
\f[B]-M, \[en]multi\f[R]
Run a multi-dimensional scan
.TP
\f[B]\[en]autoplot\f[R]
Open plotter on generated dataset
.TP
\f[B]\[en]autoplotter=AUTOPLOTTER\f[R]
Specify the plotter used with \[en]autoplot
.TP
\f[B]\[en]embed\f[R]
Store copy of instrument file in output directory
.TP
\f[B]\[en]mpi=NB_CPU\f[R]
Spread simulation over NB_CPU machines using MPI
.TP
\f[B]\[en]openacc\f[R]
parallelize using openacc
.TP
\f[B]\[en]funnel\f[R]
funneling simulation flow, e.g.\ for mixed CPU/GPU
.TP
\f[B]\[en]machines=machines\f[R]
Defines path of MPI machinefile to use in parallel mode
.TP
\f[B]\[en]optimise-file=FILE\f[R]
Store scan results in FILE (defaults to: \[lq]mccode.dat\[rq])
.TP
\f[B]\[en]no-cflags\f[R]
Disable optimising compiler flags for faster compilation
.TP
\f[B]\[en]no-main\f[R]
Do not generate a main(), e.g.\ for use with mcstas2vitess.pl.
Implies -c
.TP
\f[B]\[en]verbose\f[R]
Enable verbose output
.TP
\f[B]\[en]write-user-config\f[R]
Generate a user config file
.TP
\f[B]\[en]override-config=PATH\f[R]
Load config file from specific dir
.TP
\f[B]\[en]optimize\f[R]
Optimize instrument variable parameters to maximize monitors
.TP
\f[B]\[en]optimize-maxiter=optimize_maxiter\f[R]
Maximum number of optimization iterations to perform
.TP
\f[B]\[en]optimize-tol=optimize_tol\f[R]
Tolerance for optimization termination.
When optimizetol is specified, the selected optimization algorithm sets
some rele\[hy] vant solver-specific tolerance(s) equal to optimize-tol
.TP
\f[B]\[en]optimize-method=optimize_method\f[R]
Optimization solver in
\f[V][\[aq]powell\[aq], \[aq]nelder-mead\[aq], \[aq]cg\[aq], \[aq]bfgs\[aq], \[aq]newton-cg\[aq], \[aq]l-bfgs-b\[aq], \[aq]tnc\[aq], \[aq]cobyla\[aq],  \[aq]slsqp\[aq],  \[aq]trust-con\[hy] str\[aq], \[aq]dogleg\[aq], \[aq]trust-ncg\[aq], \[aq]trust-exact\[aq], \[aq]trust-krylov\[aq]]\f[R]
(de\[hy] fault: \f[V]powell\f[R]) You can use your custom method
\f[V]method(fun,  x0, args,  **kwargs, **options)\f[R].
Please refer to scipy documentation for proper use of it:
\f[I]https://docs.scipy .org/doc/scipy/refer\[hy]
ence/generated/scipy.optimize.mini mize.html?highlight=minimize\f[R]
.TP
\f[B]\[en]optimize-minimize\f[R]
Choose to minimize the monitors instead of maximize
.TP
\f[B]\[en]optimize-monitor=optimize_monitor\f[R]
Name of a single monitor to optimize (default is to use all)
.TP
\f[B]\[en]showcfg=ITEM\f[R]
Print selected cfg item and exit (paths are resolved and abso\[hy]
lute).
Allowed values are \[lq]bindir\[rq], \[lq]libdir\[rq],
\[lq]resourcedir\[rq], and \[lq]tooldir\[rq].
.SS INSTRUMENT OPTIONS
.TP
\f[B]-s SEED, \[en]seed=SEED\f[R]
Set random seed (must be: SEED != 0)
.TP
\f[B]-n COUNT, \[en]ncount=COUNT\f[R]
Set number of xray to simulate
.TP
\f[B]-t trace, \[en]trace=trace\f[R]
Enable trace of xray through instrument
.TP
\f[B]-d DIR, \[en]dir=DIR\f[R]
Put all data files in directory DIR.
Additionally, the directory will have subdirectories 1, 2, 3,.
\&.
\&.
containing all data files output from the different simulations.
.TP
\f[B]\[en]format=FORMAT\f[R]
Output data files using format FORMAT, usually McCode or NeXus (format
list obtained from .out -h)
.TP
\f[B]\[en]bufsiz=BUFSIZ\f[R]
Monitor_nD list/buffer-size (defaults to 1000000)
.TP
\f[B]\[en]vecsize=VECSIZE\f[R]
vector length in OpenACC parallel scenarios
.TP
\f[B]\[en]numgangs=NUMGANGS\f[R]
number of `gangs' in OpenACC parallel scenarios
.TP
\f[B]\[en]gpu_innerloop=INNERLOOP\f[R]
Maximum particles in an OpenACC kernel run.
(If INNERLOOP is smaller than ncount we repeat)
.TP
\f[B]\[en]no-output-files\f[R]
Do not write any data files
.TP
\f[B]-i, \[en]info\f[R]
Detailed instrument information
.TP
\f[B]\[en]list-parameters\f[R]
Print the instrument parameters to standard out
.TP
\f[B]\[en]meta-list\f[R]
Print all metadata defining component names
.TP
\f[B]\[en]meta-defined=META_DEFINED\f[R]
Print metadata names for component, or indicate if component:name
exists.
.TP
\f[B]\[en]meta-type=META_TYPE\f[R]
Print metadata type for component:name
.TP
\f[B]\[en]meta-data=META_DATA\f[R]
Print metadata for component:name
.SH FILES
.PP
/usr/share/mcstas/tools/Python/mccodelib/mccode_config.json
\[ti]/.mcstas/mccode_config.json
.SH EXAMPLES
.TP
Run the \f[I]Test_SX\f[R] example (Single crystal diffraction)
.IP \[bu] 2
\f[V]mcrun Test_SX.instr -d output_dir -n 1e7 TTH=13.4\f[R]
.SH AUTHORS
.PP
McStas Team (mcstas.org)
.SH SEE ALSO
.PP
mcstas(1), mcdoc(1), mcplot(1), mcrun(1), mcgui(1), mcdisplay(1)
.SH AUTHORS
McStas Neutron Ray-Tracing Team.
